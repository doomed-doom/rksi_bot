from aiogram.types import InlineKeyboardButton, KeyboardButton


def keyboard_chunks(lst):
    l = list()
    for i in lst:
        l.append(i[0])
    button = []
    buttons = []
    x = 0
    for i in l:
        x += 1
        button.append(KeyboardButton(text=i))
        if x == 3:
            x = 0
            buttons.append(button.copy())
            button.clear()
    buttons.append(button.copy())
    button.clear()
    return buttons


def inline_chunks(lst):
    l = list()
    for i in lst:
        l.append(i[0])
    button = []
    buttons = []
    x = 0
    for i in l:
        x += 1
        button.append(InlineKeyboardButton(text=i, callback_data=i))
        if x == 3:
            x = 0
            buttons.append(button.copy())
            button.clear()
    buttons.append(button.copy())
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data='Back')])
    button.clear()
    return buttons


def files_inline_chunks(lst):
    l = list()
    for i in lst:
        l.append(i[0])
    button = []
    buttons = []
    x = 0
    for i in l:
        x += 1
        button.append(InlineKeyboardButton(text=i, callback_data=f"files_{i}"))
        if x == 3:
            x = 0
            buttons.append(button.copy())
            button.clear()
    buttons.append(button.copy())
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data='others')])
    button.clear()
    return buttons


def admin_files_inline_chunks(lst):
    l = list()
    for i in lst:
        l.append(i[0])
    button = []
    buttons = []
    x = 0
    for i in l:
        x += 1
        button.append(InlineKeyboardButton(text=i, callback_data=f"adminfiles_{i}"))
        if x == 3:
            x = 0
            buttons.append(button.copy())
            button.clear()
    buttons.append(button.copy())
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data='files')])
    button.clear()
    return buttons


def admin_accounts_inline_chunks(lst):
    l = list()
    for i in lst:
        l.append(i[0])
    button = []
    buttons = []
    x = 0
    for i in l:
        x += 1
        button.append(InlineKeyboardButton(text=i, callback_data=f"adminaccounts_{i}"))
        if x == 3:
            x = 0
            buttons.append(button.copy())
            button.clear()
    buttons.append(button.copy())
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data='users')])
    button.clear()
    return buttons


def spam_inline_chunks(lst):
    l = list()
    for i in lst:
        l.append(i[0])
    button = []
    buttons = []
    x = 0
    for i in l:
        x += 1
        button.append(InlineKeyboardButton(text=i, callback_data=f"adminspam_{i}"))
        if x == 3:
            x = 0
            buttons.append(button.copy())
            button.clear()
    buttons.append(button.copy())
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data='spamming')])
    button.clear()
    return buttons


def shedule_tuple_student(lst):
    text = ""
    count = 0
    for l in lst:
        lesson = l[1]
        teacher = l[2]
        cabinet = l[4]
        count += 1
        text += f"{count}. {lesson}\n* –ö–∞–±–∏–Ω–µ—Ç: {cabinet} –∫–æ—Ä–ø—É—Å\n* –£—á–∏—Ç–µ–ª—å: {teacher}\n \n"
    return text


def shedule_tuple_teacher(lst):
    text = ""
    count = 0
    for l in lst:
        lesson = l[1]
        group = l[0]
        cabinet = l[4]
        count += 1
        text += f"{count}. {lesson}\n* –ö–∞–±–∏–Ω–µ—Ç: {cabinet} –∫–æ—Ä–ø—É—Å\n* –ì—Ä—É–ø–ø–∞: {group}\n \n"
    if not text:
        text = "–ù–µ—Ç—É –ø–∞—Ä"
    return text


def groups(lst):
    l = list()
    for i in lst:
        l.append(i[0])
    return l


weekdays = {
    '–ü–ù': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
    '–í–¢': '–í—Ç–æ—Ä–Ω–∏–∫',
    '–°–†': '–°—Ä–µ–¥—É',
    '–ß–¢': '–ß–µ—Ç–≤–µ—Ä–≥',
    '–ü–¢': '–ü—è—Ç–Ω–∏—Ü—É',
    '–°–ë': '–°—É–±–±–æ—Ç—É',
}


def get_full_day_name(day):
    for k, v in weekdays.items():
        if k == day:
            return v
    return None


admin_offices = {
    "–î–∏—Ä–µ–∫—Ç–æ—Ä": ["–°–µ—Ä–≥–µ–π –ù–∏–∫–æ–ª–∞–µ–≤–∏—á –ì–æ—Ä–±—É–Ω–æ–≤", "–ö–∞–±. 203", "–¢–µ–ª: +7 (863) 206-88-88 –¥–æ–±. 2032", "rksi@rostobr.ru"],
    "–ü—Ä–∏–µ–º–Ω–∞—è –î–∏—Ä–µ–∫—Ç–æ—Ä–∞": ["–†—ã–±–∞–ª—å—á–µ–Ω–∫–æ –¢–∞—Ç—å—è–Ω–∞ –ë–æ—Ä–∏—Å–æ–≤–Ω–∞", "–ö–∞–±. 216 (—É–ª. –¢—É—Ä–≥–µ–Ω–µ–≤—Å–∫–∞—è, 10/6)",
                           "–¢–µ–ª: +7 (863) 206-88-88 –¥–æ–±. 2111", "rksi@rostobr.ru"],
    "–ú–µ–¥. –ø—É–Ω–∫—Ç": ["–†–∞–π—Ñ –¢–∞—Ç—å—è–Ω–∞ –ê–¥–æ–ª—å—Ñ–æ–≤–Ω–∞", "–ö–∞–±. 115 (—É–ª. –¢—É—Ä–≥–µ–Ω–µ–≤—Å–∫–∞—è, 10/6)", "–¢–µ–ª: +7 (863) 206-88-88 –¥–æ–±. 1151",
                   ""],
    "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è": ["–û–∫—Å–∞–Ω–∞ –ú–∞—Ä–∫–æ–≤–Ω–∞ –ù–µ–º—á–∏—Ü–∫–∞—è", "–ö–∞–±. 108", "–¢–µ–ª: +7 (863) 206-88-88 –¥–æ–±. 1081", "glbux@adm.rksi.ru"],
    "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞": ["–ö—Ä–∏–≤–æ—à–µ–µ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ò–≤–∞–Ω–æ–≤–Ω–∞", "–ö–∞–±. 215 (—É–ª. –¢—É—Ä–≥–µ–Ω–µ–≤—Å–∫–∞—è, 10/6)",
                   "–¢–µ–ª: +7 (863) 206-88-88 –¥–æ–±. 2151", "krivosheeva@adm.rksi.ru"],
}
